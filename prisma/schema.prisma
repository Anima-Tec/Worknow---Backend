generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  COMPANY
}

model User {
  id               Int       @id @default(autoincrement())
  nombre           String?   
  apellido         String?   
  email            String    @unique
  password         String
  telefono         String?   
  fechaNacimiento  DateTime? 
  ciudad           String?   
  profesion        String?   
  biografia        String?   
  experiencia      String?   
  educacion        String?   
  habilidades      String?   
  role             String    @default("USER")
  createdAt        DateTime  @default(now())

  applications     ProjectApplication[]
  completedProjects CompletedProject[] // ← RELACIÓN AGREGADA
}

model Company {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  role          Role     @default(COMPANY)
  nombreEmpresa String
  rut           String?
  telefono      String?
  direccion     String?
  ciudad        String?
  sector        String?
  sitioWeb      String?
  tamano        String?
  descripcion   String?
  logoUrl       String?
  fundada       String?
  empleados     String?
  ubicaciones   String?
  mision        String?
  vision        String?
  twitter       String?
  facebook      String?
  linkedin      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  projects Project[]
}

model Project {
  id           Int       @id @default(autoincrement())
  title        String
  description  String
  skills       Json?
  duration     String?
  modality     String?
  remuneration String?
  location     String?
  isActive     Boolean   @default(true)
  isCompleted  Boolean   @default(false) // ← NUEVO CAMPO AGREGADO
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  companyId Int
  company   Company     @relation(fields: [companyId], references: [id])

  applications ProjectApplication[]
}

model ProjectApplication {
  id        Int      @id @default(autoincrement())
  message   String?
  status    String   @default("PENDING")
  visto     Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  userId    Int
  projectId Int
  user      User     @relation(fields: [userId], references: [id])
  project   Project  @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
}

model Job {
  id             Int      @id @default(autoincrement())
  companyName    String
  companyWebsite String?
  title          String
  area           String
  jobType        String
  contractType   String
  modality       String
  location       String
  salaryRange    String
  description    String   
  createdAt      DateTime  @default(now())
  projectUrl     String?
}

model CompletedProject {
  id               Int      @id @default(autoincrement())
  projectTitle     String
  companyName      String
  description      String?
  completionDate   DateTime @default(now())
  skills           String?   // ← NUEVO: Habilidades utilizadas
  duration         String?   // ← NUEVO: Duración del proyecto
  modality         String?   // ← NUEVO: Modalidad del proyecto
  remuneration     String?   // ← NUEVO: Remuneración recibida
  
  userId           Int
  user             User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  applicationId    Int?     // Referencia a la postulación original
  
  createdAt        DateTime @default(now())
}