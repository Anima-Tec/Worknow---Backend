// ==========================================================
// PRISMA CONFIG
// ==========================================================
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

// ==========================================================
// ENUMS
// ==========================================================
enum Role {
  USER
  COMPANY
}

// ==========================================================
// MODELOS
// ==========================================================

model User {
  id              Int       @id @default(autoincrement())
  nombre          String?
  apellido        String?
  email           String    @unique
  password        String
  telefono        String?
  fechaNacimiento DateTime?
  ciudad          String?
  profesion       String?
  biografia       String?
  experiencia     String?
  educacion       String?
  habilidades     String?
  role            String    @default("USER")
  createdAt       DateTime  @default(now())
  
      // 🆕 Campo JSON para formación académica
      formacionAcademica Json?  // Objeto JSON con institucion, titulo, periodo, descripcion

  // 🔹 Relaciones
  applications      ProjectApplication[]
  jobApplications   JobApplication[] // 🆕 Relación con postulaciones a trabajos
  completedProjects CompletedProject[]
}

// ==========================================================

model Company {
  id            Int      @id @default(autoincrement())
  email         String   @unique
  password      String
  role          Role     @default(COMPANY)
  nombreEmpresa String
  rut           String?
  telefono      String?
  direccion     String?
  ciudad        String?
  sector        String?
  sitioWeb      String?
  tamano        String?
  descripcion   String?
  logoUrl       String?
  fundada       String?
  empleados     String?
  ubicaciones   String?
  mision        String?
  vision        String?
  twitter       String?
  facebook      String?
  linkedin      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // 🔹 Relaciones
  projects Project[]
  jobs     Job[]
}

// ==========================================================

model Project {
  id             Int       @id @default(autoincrement())
  title          String
  description    String
  skills         Json?
  duration       String?        // ⏱️ Tiempo estimado
  deliveryFormat String?        // 📦 Formato de entrega
  evaluation     String?        // 🧮 Criterios a evaluar
  remuneration   String?        // 💰 Remuneración
  isActive       Boolean   @default(true)
  isCompleted    Boolean   @default(false)
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  companyId      Int
  company        Company    @relation(fields: [companyId], references: [id])
  applications   ProjectApplication[]
}

// ==========================================================

model ProjectApplication {
  id        Int      @id @default(autoincrement())
  message   String?
  status    String   @default("PENDIENTE")
  visto     Boolean  @default(false)
  vistoCompany  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId    Int
  projectId Int
  user      User    @relation(fields: [userId], references: [id])
  project   Project @relation(fields: [projectId], references: [id])

  @@unique([userId, projectId])
}

// ==========================================================

model Job {
  id             Int      @id @default(autoincrement())
  title          String
  area           String?        // 🆕 Área / departamento
  jobType        String?        // 🆕 Tipo de trabajo (Full-Time, Part-Time, Freelance)
  contractType   String?        // 🆕 Tipo de contrato (Temporal, Permanente, etc.)
  modality       String?        // 🏠 Presencial / Remoto / Híbrido
  location       String?        // 📍 Ubicación
  remuneration   String?        // 💰 Rango salarial
  projectUrl     String?        // 🌐 URL del proyecto asociado
  description    String         // 🧾 Descripción del puesto
  skills         String?        // 🧠 Habilidades requeridas
  isActive       Boolean  @default(true)
  isCompleted    Boolean  @default(false)
  hasAccepted    Boolean  @default(false)
  createdAt      DateTime @default(now())

  companyId      Int
  company        Company          @relation(fields: [companyId], references: [id])
  applications   JobApplication[]
}


// ==========================================================

model JobApplication {
  id        Int      @id @default(autoincrement())
  userId    Int
  jobId     Int
  status    String   @default("PENDIENTE")
  visto     Boolean  @default(false)
  vistoCompany  Boolean  @default(false)
  message   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id])
  job  Job  @relation(fields: [jobId], references: [id])

  @@unique([userId, jobId])
}

// ==========================================================

model CompletedProject {
  id             Int      @id @default(autoincrement())
  projectTitle   String
  companyName    String
  description    String?
  completionDate DateTime @default(now())
  skills         String?
  duration       String?
  modality       String?
  remuneration   String?
  createdAt      DateTime @default(now())

  userId        Int
  user          User @relation(fields: [userId], references: [id], onDelete: Cascade)
  applicationId Int?
}
