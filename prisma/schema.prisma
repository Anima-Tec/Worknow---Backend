generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())

  // Un usuario puede tener mÃºltiples postulaciones (opcional)
  applications ProjectApplication[]
}

model Company {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  role      String   @default("COMPANY")
  createdAt DateTime @default(now())

  projects Project[]
}

model Project {
  id                 Int      @id @default(autoincrement())
  title              String
  description        String
  skills             String?
  duration           String?
  modality           String?
  remuneration       String?
  deliveryFormat     String?
  evaluationCriteria String?
  isActive           Boolean  @default(true)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  company   Company? @relation(fields: [companyId], references: [id])
  companyId Int?

  // ðŸ”¹ RelaciÃ³n inversa
  applications ProjectApplication[]
}

model ProjectApplication {
  id             Int      @id @default(autoincrement())
  userId         Int?
  projectId      Int
  applicantName  String?
  applicantEmail String?
  message        String?
  status         String   @default("En revisiÃ³n") // ðŸŸ¡ nuevo campo
  createdAt      DateTime @default(now())

  user    User?    @relation(fields: [userId], references: [id])
  project Project  @relation(fields: [projectId], references: [id])
}

model Job {
  id             Int      @id @default(autoincrement())
  companyName    String
  companyWebsite String?
  title          String
  area           String
  jobType        String
  contractType   String
  modality       String
  location       String
  salaryRange    String
  description    String
  createdAt      DateTime @default(now())
  projectUrl     String?
}
