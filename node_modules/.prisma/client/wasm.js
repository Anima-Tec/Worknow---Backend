
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  password: 'password',
  telefono: 'telefono',
  fechaNacimiento: 'fechaNacimiento',
  ciudad: 'ciudad',
  profesion: 'profesion',
  biografia: 'biografia',
  experiencia: 'experiencia',
  educacion: 'educacion',
  habilidades: 'habilidades',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  nombreEmpresa: 'nombreEmpresa',
  rut: 'rut',
  telefono: 'telefono',
  direccion: 'direccion',
  ciudad: 'ciudad',
  sector: 'sector',
  sitioWeb: 'sitioWeb',
  tamano: 'tamano',
  descripcion: 'descripcion',
  logoUrl: 'logoUrl',
  fundada: 'fundada',
  empleados: 'empleados',
  ubicaciones: 'ubicaciones',
  mision: 'mision',
  vision: 'vision',
  twitter: 'twitter',
  facebook: 'facebook',
  linkedin: 'linkedin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  skills: 'skills',
  duration: 'duration',
  modality: 'modality',
  remuneration: 'remuneration',
  location: 'location',
  isActive: 'isActive',
  isCompleted: 'isCompleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  companyId: 'companyId'
};

exports.Prisma.ProjectApplicationScalarFieldEnum = {
  id: 'id',
  message: 'message',
  status: 'status',
  visto: 'visto',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  projectId: 'projectId'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  companyName: 'companyName',
  companyWebsite: 'companyWebsite',
  title: 'title',
  area: 'area',
  jobType: 'jobType',
  contractType: 'contractType',
  modality: 'modality',
  location: 'location',
  salaryRange: 'salaryRange',
  description: 'description',
  createdAt: 'createdAt',
  projectUrl: 'projectUrl'
};

exports.Prisma.CompletedProjectScalarFieldEnum = {
  id: 'id',
  projectTitle: 'projectTitle',
  companyName: 'companyName',
  description: 'description',
  completionDate: 'completionDate',
  skills: 'skills',
  duration: 'duration',
  modality: 'modality',
  remuneration: 'remuneration',
  userId: 'userId',
  applicationId: 'applicationId',
  createdAt: 'createdAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  COMPANY: 'COMPANY'
};

exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  Project: 'Project',
  ProjectApplication: 'ProjectApplication',
  Job: 'Job',
  CompletedProject: 'CompletedProject'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Martina\\Worknow---Backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Martina\\Worknow---Backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\nenum Role {\n  USER\n  COMPANY\n}\n\nmodel User {\n  id              Int       @id @default(autoincrement())\n  nombre          String?\n  apellido        String?\n  email           String    @unique\n  password        String\n  telefono        String?\n  fechaNacimiento DateTime?\n  ciudad          String?\n  profesion       String?\n  biografia       String?\n  experiencia     String?\n  educacion       String?\n  habilidades     String?\n  role            String    @default(\"USER\")\n  createdAt       DateTime  @default(now())\n\n  applications      ProjectApplication[]\n  completedProjects CompletedProject[] // ← RELACIÓN AGREGADA\n}\n\nmodel Company {\n  id            Int       @id @default(autoincrement())\n  email         String    @unique\n  password      String\n  role          Role      @default(COMPANY)\n  nombreEmpresa String\n  rut           String?\n  telefono      String?\n  direccion     String?\n  ciudad        String?\n  sector        String?\n  sitioWeb      String?\n  tamano        String?\n  descripcion   String?\n  logoUrl       String?\n  fundada       String?\n  empleados     String?\n  ubicaciones   String?\n  mision        String?\n  vision        String?\n  twitter       String?\n  facebook      String?\n  linkedin      String?\n  createdAt     DateTime  @default(now())\n  updatedAt     DateTime  @updatedAt\n  projects      Project[]\n}\n\nmodel Project {\n  id           Int      @id @default(autoincrement())\n  title        String\n  description  String\n  skills       Json?\n  duration     String?\n  modality     String?\n  remuneration String?\n  location     String?\n  isActive     Boolean  @default(true)\n  isCompleted  Boolean  @default(false) // ← NUEVO CAMPO AGREGADO\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  companyId Int\n  company   Company @relation(fields: [companyId], references: [id])\n\n  applications ProjectApplication[]\n}\n\nmodel ProjectApplication {\n  id        Int      @id @default(autoincrement())\n  message   String?\n  status    String   @default(\"PENDING\")\n  visto     Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  userId    Int\n  projectId Int\n  user      User    @relation(fields: [userId], references: [id])\n  project   Project @relation(fields: [projectId], references: [id])\n\n  @@unique([userId, projectId])\n}\n\nmodel Job {\n  id             Int      @id @default(autoincrement())\n  companyName    String\n  companyWebsite String?\n  title          String\n  area           String\n  jobType        String\n  contractType   String\n  modality       String\n  location       String\n  salaryRange    String\n  description    String\n  createdAt      DateTime @default(now())\n  projectUrl     String?\n}\n\nmodel CompletedProject {\n  id             Int      @id @default(autoincrement())\n  projectTitle   String\n  companyName    String\n  description    String?\n  completionDate DateTime @default(now())\n  skills         String? // ← NUEVO: Habilidades utilizadas\n  duration       String? // ← NUEVO: Duración del proyecto\n  modality       String? // ← NUEVO: Modalidad del proyecto\n  remuneration   String? // ← NUEVO: Remuneración recibida\n\n  userId        Int\n  user          User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  applicationId Int? // Referencia a la postulación original\n\n  createdAt DateTime @default(now())\n}\n",
  "inlineSchemaHash": "ba727574beda8b4fb49ea3071f11615e74c5f3d35bec3abe88128d61b3c54ef5",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ciudad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profesion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"biografia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experiencia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"educacion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"habilidades\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"ProjectApplication\",\"relationName\":\"ProjectApplicationToUser\"},{\"name\":\"completedProjects\",\"kind\":\"object\",\"type\":\"CompletedProject\",\"relationName\":\"CompletedProjectToUser\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"nombreEmpresa\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rut\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ciudad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sitioWeb\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tamano\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fundada\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"empleados\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ubicaciones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mision\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vision\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebook\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"CompanyToProject\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remuneration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToProject\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"ProjectApplication\",\"relationName\":\"ProjectToProjectApplication\"}],\"dbName\":null},\"ProjectApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visto\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectApplicationToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectApplication\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyWebsite\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"area\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"jobType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"contractType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"salaryRange\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projectUrl\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"CompletedProject\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remuneration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompletedProjectToUser\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

