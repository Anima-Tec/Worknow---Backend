
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nombre: 'nombre',
  apellido: 'apellido',
  email: 'email',
  password: 'password',
  telefono: 'telefono',
  fechaNacimiento: 'fechaNacimiento',
  ciudad: 'ciudad',
  profesion: 'profesion',
  biografia: 'biografia',
  experiencia: 'experiencia',
  educacion: 'educacion',
  habilidades: 'habilidades',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.CompanyScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  role: 'role',
  nombreEmpresa: 'nombreEmpresa',
  rut: 'rut',
  telefono: 'telefono',
  direccion: 'direccion',
  ciudad: 'ciudad',
  sector: 'sector',
  sitioWeb: 'sitioWeb',
  tamano: 'tamano',
  descripcion: 'descripcion',
  logoUrl: 'logoUrl',
  fundada: 'fundada',
  empleados: 'empleados',
  ubicaciones: 'ubicaciones',
  mision: 'mision',
  vision: 'vision',
  twitter: 'twitter',
  facebook: 'facebook',
  linkedin: 'linkedin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ProjectScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  skills: 'skills',
  duration: 'duration',
  modality: 'modality',
  remuneration: 'remuneration',
  location: 'location',
  isActive: 'isActive',
  isCompleted: 'isCompleted',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  companyId: 'companyId'
};

exports.Prisma.ProjectApplicationScalarFieldEnum = {
  id: 'id',
  message: 'message',
  status: 'status',
  visto: 'visto',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  userId: 'userId',
  projectId: 'projectId'
};

exports.Prisma.JobScalarFieldEnum = {
  id: 'id',
  title: 'title',
  description: 'description',
  skills: 'skills',
  location: 'location',
  remuneration: 'remuneration',
  modality: 'modality',
  isActive: 'isActive',
  isCompleted: 'isCompleted',
  createdAt: 'createdAt',
  companyId: 'companyId'
};

exports.Prisma.JobApplicationScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  jobId: 'jobId',
  status: 'status',
  visto: 'visto',
  message: 'message',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CompletedProjectScalarFieldEnum = {
  id: 'id',
  projectTitle: 'projectTitle',
  companyName: 'companyName',
  description: 'description',
  completionDate: 'completionDate',
  skills: 'skills',
  duration: 'duration',
  modality: 'modality',
  remuneration: 'remuneration',
  createdAt: 'createdAt',
  userId: 'userId',
  applicationId: 'applicationId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullableJsonNullValueInput = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};

exports.Prisma.JsonNullValueFilter = {
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.Role = exports.$Enums.Role = {
  USER: 'USER',
  COMPANY: 'COMPANY'
};

exports.Prisma.ModelName = {
  User: 'User',
  Company: 'Company',
  Project: 'Project',
  ProjectApplication: 'ProjectApplication',
  Job: 'Job',
  JobApplication: 'JobApplication',
  CompletedProject: 'CompletedProject'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\Martina\\Worknow---Backend\\node_modules\\@prisma\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\Martina\\Worknow---Backend\\prisma\\schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "sqlite",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// ==========================================================\n// PRISMA CONFIG\n// ==========================================================\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"sqlite\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// ==========================================================\n// ENUMS\n// ==========================================================\nenum Role {\n  USER\n  COMPANY\n}\n\n// ==========================================================\n// MODELOS\n// ==========================================================\n\nmodel User {\n  id              Int       @id @default(autoincrement())\n  nombre          String?\n  apellido        String?\n  email           String    @unique\n  password        String\n  telefono        String?\n  fechaNacimiento DateTime?\n  ciudad          String?\n  profesion       String?\n  biografia       String?\n  experiencia     String?\n  educacion       String?\n  habilidades     String?\n  role            String    @default(\"USER\")\n  createdAt       DateTime  @default(now())\n\n  // ðŸ”¹ Relaciones\n  applications      ProjectApplication[]\n  jobApplications   JobApplication[] // ðŸ†• RelaciÃ³n con postulaciones a trabajos\n  completedProjects CompletedProject[]\n}\n\n// ==========================================================\n\nmodel Company {\n  id            Int      @id @default(autoincrement())\n  email         String   @unique\n  password      String\n  role          Role     @default(COMPANY)\n  nombreEmpresa String\n  rut           String?\n  telefono      String?\n  direccion     String?\n  ciudad        String?\n  sector        String?\n  sitioWeb      String?\n  tamano        String?\n  descripcion   String?\n  logoUrl       String?\n  fundada       String?\n  empleados     String?\n  ubicaciones   String?\n  mision        String?\n  vision        String?\n  twitter       String?\n  facebook      String?\n  linkedin      String?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n\n  // ðŸ”¹ Relaciones\n  projects Project[]\n  jobs     Job[]\n}\n\n// ==========================================================\n\nmodel Project {\n  id           Int      @id @default(autoincrement())\n  title        String\n  description  String\n  skills       Json?\n  duration     String?\n  modality     String?\n  remuneration String?\n  location     String?\n  isActive     Boolean  @default(true)\n  isCompleted  Boolean  @default(false)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  companyId    Int\n  company      Company              @relation(fields: [companyId], references: [id])\n  applications ProjectApplication[]\n}\n\n// ==========================================================\n\nmodel ProjectApplication {\n  id        Int      @id @default(autoincrement())\n  message   String?\n  status    String   @default(\"PENDING\")\n  visto     Boolean  @default(false)\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  userId    Int\n  projectId Int\n  user      User    @relation(fields: [userId], references: [id])\n  project   Project @relation(fields: [projectId], references: [id])\n\n  @@unique([userId, projectId])\n}\n\n// ==========================================================\n\nmodel Job {\n  id           Int      @id @default(autoincrement())\n  title        String\n  description  String\n  skills       String?\n  location     String?\n  remuneration String?\n  modality     String?\n  isActive     Boolean  @default(true)\n  isCompleted  Boolean  @default(false)\n  createdAt    DateTime @default(now())\n\n  companyId    Int\n  company      Company          @relation(fields: [companyId], references: [id])\n  applications JobApplication[]\n}\n\n// ==========================================================\n\nmodel JobApplication {\n  id        Int      @id @default(autoincrement())\n  userId    Int\n  jobId     Int\n  status    String   @default(\"PENDING\")\n  visto     Boolean  @default(false)\n  message   String?\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  user User @relation(fields: [userId], references: [id])\n  job  Job  @relation(fields: [jobId], references: [id])\n\n  @@unique([userId, jobId])\n}\n\n// ==========================================================\n\nmodel CompletedProject {\n  id             Int      @id @default(autoincrement())\n  projectTitle   String\n  companyName    String\n  description    String?\n  completionDate DateTime @default(now())\n  skills         String?\n  duration       String?\n  modality       String?\n  remuneration   String?\n  createdAt      DateTime @default(now())\n\n  userId        Int\n  user          User @relation(fields: [userId], references: [id], onDelete: Cascade)\n  applicationId Int?\n}\n",
  "inlineSchemaHash": "3fa25c57a5a6a054039345acd7204ba4fb889c186854939c4db6c03b3a4893f4",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nombre\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"apellido\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fechaNacimiento\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"ciudad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profesion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"biografia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"experiencia\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"educacion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"habilidades\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"ProjectApplication\",\"relationName\":\"ProjectApplicationToUser\"},{\"name\":\"jobApplications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"JobApplicationToUser\"},{\"name\":\"completedProjects\",\"kind\":\"object\",\"type\":\"CompletedProject\",\"relationName\":\"CompletedProjectToUser\"}],\"dbName\":null},\"Company\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"nombreEmpresa\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"rut\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"telefono\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"direccion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ciudad\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sector\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sitioWeb\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tamano\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descripcion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"logoUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"fundada\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"empleados\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ubicaciones\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"mision\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"vision\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"twitter\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"facebook\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"linkedin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"projects\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"CompanyToProject\"},{\"name\":\"jobs\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"CompanyToJob\"}],\"dbName\":null},\"Project\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"Json\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remuneration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToProject\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"ProjectApplication\",\"relationName\":\"ProjectToProjectApplication\"}],\"dbName\":null},\"ProjectApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visto\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ProjectApplicationToUser\"},{\"name\":\"project\",\"kind\":\"object\",\"type\":\"Project\",\"relationName\":\"ProjectToProjectApplication\"}],\"dbName\":null},\"Job\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remuneration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"isCompleted\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"companyId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"company\",\"kind\":\"object\",\"type\":\"Company\",\"relationName\":\"CompanyToJob\"},{\"name\":\"applications\",\"kind\":\"object\",\"type\":\"JobApplication\",\"relationName\":\"JobToJobApplication\"}],\"dbName\":null},\"JobApplication\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"jobId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"visto\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"message\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"JobApplicationToUser\"},{\"name\":\"job\",\"kind\":\"object\",\"type\":\"Job\",\"relationName\":\"JobToJobApplication\"}],\"dbName\":null},\"CompletedProject\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projectTitle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"companyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"completionDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"skills\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"duration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"modality\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"remuneration\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CompletedProjectToUser\"},{\"name\":\"applicationId\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

